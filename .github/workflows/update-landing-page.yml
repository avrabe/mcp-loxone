# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Ralf Anton Beier

name: Update Landing Page Content

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'README.md'
      - 'pyproject.toml'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update landing page'
        required: false
        default: 'false'

jobs:
  update-content:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Extract project info
        id: project_info
        run: |
          # Extract version from pyproject.toml
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Count MCP tools from server.py
          TOOL_COUNT=$(grep -c '@mcp\.tool()' src/loxone_mcp/server.py || echo "20+")
          echo "tool_count=$TOOL_COUNT" >> $GITHUB_OUTPUT
          
          # Extract device counts from README or server comments
          DEVICE_COUNT=$(grep -o '[0-9]\+ devices' README.md | head -1 | grep -o '[0-9]\+' || echo "117")
          echo "device_count=$DEVICE_COUNT" >> $GITHUB_OUTPUT

      - name: Update landing page with real data
        run: |
          # Update version information
          sed -i "s/v[0-9]\+\.[0-9]\+\.[0-9]\+/v${{ steps.project_info.outputs.version }}/g" index.html
          
          # Update tool count if different
          if [ "${{ steps.project_info.outputs.tool_count }}" != "20+" ]; then
            sed -i "s/20+/${{ steps.project_info.outputs.tool_count }}/g" index.html
          fi
          
          # Update device count if different  
          if [ "${{ steps.project_info.outputs.device_count }}" != "117" ]; then
            sed -i "s/117/${{ steps.project_info.outputs.device_count }}/g" index.html
          fi

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet index.html; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add index.html
          git commit -m "chore: update landing page with latest project data
          
          - Version: ${{ steps.project_info.outputs.version }}
          - Tools: ${{ steps.project_info.outputs.tool_count }}
          - Devices: ${{ steps.project_info.outputs.device_count }}
          
          Auto-updated by GitHub Actions"
          git push

      - name: Summary
        run: |
          echo "## Landing Page Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.project_info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **MCP Tools**: ${{ steps.project_info.outputs.tool_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Connected Devices**: ${{ steps.project_info.outputs.device_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Made**: ${{ steps.changes.outputs.changed }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
            echo "- **Status**: ✅ Landing page updated and will be deployed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ℹ️ No changes needed" >> $GITHUB_STEP_SUMMARY
          fi