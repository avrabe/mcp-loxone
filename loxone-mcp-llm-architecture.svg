<svg viewBox="0 0 1400 1600" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <rect width="1400" height="1600" fill="#f8f9fa"/>
  
  <!-- Title -->
  <text x="700" y="30" text-anchor="middle" font-size="24" font-weight="bold" fill="#333">
    Loxone MCP + LLM Architecture &amp; Implementation Roadmap
  </text>
  
  <!-- Original Architecture Section -->
  <g transform="translate(0, 60)">
    <!-- Background for architecture section -->
    <rect x="20" y="0" width="1360" height="400" rx="10" fill="#f0f4f8" stroke="#ddd"/>
    <text x="40" y="25" font-size="18" font-weight="bold" fill="#333">Current Architecture Flow</text>
    
    <!-- Components (smaller to fit) -->
    <!-- User -->
    <g transform="translate(50, 50)">
      <rect x="0" y="0" width="120" height="50" rx="8" fill="#4a90e2" stroke="#357abd" stroke-width="2"/>
      <text x="60" y="30" text-anchor="middle" fill="white" font-size="14" font-weight="bold">User</text>
    </g>
    
    <!-- Claude Chat -->
    <g transform="translate(220, 50)">
      <rect x="0" y="0" width="120" height="50" rx="8" fill="#7c4dff" stroke="#6234d2" stroke-width="2"/>
      <text x="60" y="30" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Claude Chat</text>
    </g>
    
    <!-- MCP Client -->
    <g transform="translate(390, 50)">
      <rect x="0" y="0" width="120" height="50" rx="8" fill="#00897b" stroke="#00695c" stroke-width="2"/>
      <text x="60" y="30" text-anchor="middle" fill="white" font-size="14" font-weight="bold">MCP Client</text>
    </g>
    
    <!-- MCP Inspector -->
    <g transform="translate(560, 50)">
      <rect x="0" y="0" width="140" height="50" rx="8" fill="#ff6b6b" stroke="#dc5353" stroke-width="2"/>
      <text x="70" y="30" text-anchor="middle" fill="white" font-size="14" font-weight="bold">MCP Inspector</text>
    </g>
    
    <!-- Loxone MCP Server -->
    <g transform="translate(300, 150)">
      <rect x="0" y="0" width="280" height="80" rx="8" fill="#ff9800" stroke="#f57c00" stroke-width="2"/>
      <text x="140" y="25" text-anchor="middle" fill="white" font-size="16" font-weight="bold">Loxone MCP Server</text>
      <text x="140" y="45" text-anchor="middle" fill="white" font-size="12">Context Builder</text>
      <text x="140" y="60" text-anchor="middle" fill="white" font-size="12">Command Processor</text>
    </g>
    
    <!-- LLM (Claude API) -->
    <g transform="translate(650, 250)">
      <rect x="0" y="0" width="120" height="50" rx="8" fill="#9c27b0" stroke="#7b1fa2" stroke-width="2"/>
      <text x="60" y="30" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Claude API</text>
    </g>
    
    <!-- Loxone Miniserver -->
    <g transform="translate(200, 280)">
      <rect x="0" y="0" width="160" height="80" rx="8" fill="#4caf50" stroke="#388e3c" stroke-width="2"/>
      <text x="80" y="30" text-anchor="middle" fill="white" font-size="16" font-weight="bold">Loxone</text>
      <text x="80" y="50" text-anchor="middle" fill="white" font-size="14">Miniserver</text>
    </g>
    
    <!-- New Feature Categories -->
    <g transform="translate(850, 50)">
      <rect x="0" y="0" width="500" height="310" rx="10" fill="#fff" stroke="#ddd" stroke-width="2"/>
      <text x="250" y="25" text-anchor="middle" font-size="16" font-weight="bold" fill="#333">New Intelligence Features</text>
      
      <!-- Feature boxes -->
      <g transform="translate(20, 40)">
        <rect x="0" y="0" width="220" height="60" rx="5" fill="#e3f2fd" stroke="#1976d2"/>
        <text x="110" y="20" text-anchor="middle" font-size="12" font-weight="bold" fill="#1976d2">Context &amp; State Management</text>
        <text x="110" y="35" text-anchor="middle" font-size="10" fill="#555">• get_room_context()</text>
        <text x="110" y="48" text-anchor="middle" font-size="10" fill="#555">• get_home_state_snapshot()</text>
      </g>
      
      <g transform="translate(250, 40)">
        <rect x="0" y="0" width="220" height="60" rx="5" fill="#f3e5f5" stroke="#7b1fa2"/>
        <text x="110" y="20" text-anchor="middle" font-size="12" font-weight="bold" fill="#7b1fa2">Natural Language Processing</text>
        <text x="110" y="35" text-anchor="middle" font-size="10" fill="#555">• interpret_scene_request()</text>
        <text x="110" y="48" text-anchor="middle" font-size="10" fill="#555">• explain_home_state()</text>
      </g>
      
      <g transform="translate(20, 110)">
        <rect x="0" y="0" width="220" height="60" rx="5" fill="#e8f5e9" stroke="#388e3c"/>
        <text x="110" y="20" text-anchor="middle" font-size="12" font-weight="bold" fill="#388e3c">Predictive Analytics</text>
        <text x="110" y="35" text-anchor="middle" font-size="10" fill="#555">• predict_occupancy()</text>
        <text x="110" y="48" text-anchor="middle" font-size="10" fill="#555">• get_energy_forecast()</text>
      </g>
      
      <g transform="translate(250, 110)">
        <rect x="0" y="0" width="220" height="60" rx="5" fill="#fff3e0" stroke="#f57c00"/>
        <text x="110" y="20" text-anchor="middle" font-size="12" font-weight="bold" fill="#f57c00">Learning &amp; Adaptation</text>
        <text x="110" y="35" text-anchor="middle" font-size="10" fill="#555">• record_scene_feedback()</text>
        <text x="110" y="48" text-anchor="middle" font-size="10" fill="#555">• analyze_override_patterns()</text>
      </g>
      
      <g transform="translate(20, 180)">
        <rect x="0" y="0" width="220" height="60" rx="5" fill="#fce4ec" stroke="#c2185b"/>
        <text x="110" y="20" text-anchor="middle" font-size="12" font-weight="bold" fill="#c2185b">Safety &amp; Validation</text>
        <text x="110" y="35" text-anchor="middle" font-size="10" fill="#555">• validate_scene_safety()</text>
        <text x="110" y="48" text-anchor="middle" font-size="10" fill="#555">• simulate_commands()</text>
      </g>
      
      <g transform="translate(250, 180)">
        <rect x="0" y="0" width="220" height="60" rx="5" fill="#e0f2f1" stroke="#00796b"/>
        <text x="110" y="20" text-anchor="middle" font-size="12" font-weight="bold" fill="#00796b">Multi-Zone Coordination</text>
        <text x="110" y="35" text-anchor="middle" font-size="10" fill="#555">• coordinate_zones()</text>
        <text x="110" y="48" text-anchor="middle" font-size="10" fill="#555">• balance_home_comfort()</text>
      </g>
      
      <!-- LLM Sampling indicator -->
      <g transform="translate(150, 250)">
        <rect x="0" y="0" width="200" height="40" rx="20" fill="#ff4444" stroke="#cc0000"/>
        <text x="100" y="25" text-anchor="middle" fill="white" font-size="12" font-weight="bold">All trigger LLM Sampling</text>
      </g>
    </g>
  </g>
  
  <!-- Implementation Phases Section -->
  <g transform="translate(0, 480)">
    <text x="700" y="20" text-anchor="middle" font-size="20" font-weight="bold" fill="#333">Implementation Roadmap</text>
    
    <!-- Phase 1 -->
    <g transform="translate(20, 40)">
      <rect x="0" y="0" width="420" height="320" rx="10" fill="#e8f5e9" stroke="#4caf50" stroke-width="3"/>
      <rect x="0" y="0" width="420" height="50" rx="10" fill="#4caf50"/>
      <text x="210" y="30" text-anchor="middle" fill="white" font-size="18" font-weight="bold">Phase 1: Foundation (Weeks 1-4)</text>
      <text x="210" y="80" text-anchor="middle" font-size="14" font-weight="bold" fill="#333">Core Context &amp; Basic LLM Integration</text>
      
      <!-- Tasks -->
      <g transform="translate(20, 100)">
        <rect x="0" y="0" width="380" height="200" rx="5" fill="#fff" stroke="#ddd"/>
        
        <!-- Task items -->
        <circle cx="20" cy="25" r="8" fill="#4caf50"/>
        <text x="20" y="30" text-anchor="middle" fill="white" font-size="10" font-weight="bold">1</text>
        <text x="40" y="30" font-size="12" fill="#333">get_home_state_snapshot() - Complete home state API</text>
        <text x="40" y="45" font-size="10" fill="#666">Returns all rooms, devices, sensors, occupancy</text>
        
        <circle cx="20" cy="65" r="8" fill="#4caf50"/>
        <text x="20" y="70" text-anchor="middle" fill="white" font-size="10" font-weight="bold">2</text>
        <text x="40" y="70" font-size="12" fill="#333">interpret_scene_request() - Natural language handler</text>
        <text x="40" y="85" font-size="10" fill="#666">Triggers LLM sampling with context</text>
        
        <circle cx="20" cy="105" r="8" fill="#4caf50"/>
        <text x="20" y="110" text-anchor="middle" fill="white" font-size="10" font-weight="bold">3</text>
        <text x="40" y="110" font-size="12" fill="#333">execute_llm_scene() - Command execution engine</text>
        <text x="40" y="125" font-size="10" fill="#666">With rollback and safety checks</text>
        
        <circle cx="20" cy="145" r="8" fill="#4caf50"/>
        <text x="20" y="150" text-anchor="middle" fill="white" font-size="10" font-weight="bold">4</text>
        <text x="40" y="150" font-size="12" fill="#333">validate_scene_safety() - Pre-execution validation</text>
        <text x="40" y="165" font-size="10" fill="#666">Prevents dangerous combinations</text>
        
        <circle cx="20" cy="185" r="8" fill="#4caf50"/>
        <text x="20" y="190" text-anchor="middle" fill="white" font-size="10" font-weight="bold">5</text>
        <text x="40" y="190" font-size="12" fill="#333">get_room_context() - Rich room state</text>
        <text x="40" y="205" font-size="10" fill="#666">Includes history and patterns</text>
      </g>
    </g>
    
    <!-- Phase 2 -->
    <g transform="translate(460, 40)">
      <rect x="0" y="0" width="420" height="320" rx="10" fill="#fff3e0" stroke="#ff9800" stroke-width="3"/>
      <rect x="0" y="0" width="420" height="50" rx="10" fill="#ff9800"/>
      <text x="210" y="30" text-anchor="middle" fill="white" font-size="18" font-weight="bold">Phase 2: Intelligence (Weeks 5-8)</text>
      <text x="210" y="80" text-anchor="middle" font-size="14" font-weight="bold" fill="#333">Pattern Recognition &amp; Predictive Features</text>
      
      <!-- Tasks -->
      <g transform="translate(20, 100)">
        <rect x="0" y="0" width="380" height="200" rx="5" fill="#fff" stroke="#ddd"/>
        
        <circle cx="20" cy="25" r="8" fill="#ff9800"/>
        <text x="20" y="30" text-anchor="middle" fill="white" font-size="10" font-weight="bold">6</text>
        <text x="40" y="30" font-size="12" fill="#333">get_behavior_patterns() - ML pattern detection</text>
        <text x="40" y="45" font-size="10" fill="#666">Lighting, climate, presence patterns</text>
        
        <circle cx="20" cy="65" r="8" fill="#ff9800"/>
        <text x="20" y="70" text-anchor="middle" fill="white" font-size="10" font-weight="bold">7</text>
        <text x="40" y="70" font-size="12" fill="#333">predict_occupancy() - Room usage prediction</text>
        <text x="40" y="85" font-size="10" fill="#666">Probability maps for planning</text>
        
        <circle cx="20" cy="105" r="8" fill="#ff9800"/>
        <text x="20" y="110" text-anchor="middle" fill="white" font-size="10" font-weight="bold">8</text>
        <text x="40" y="110" font-size="12" fill="#333">analyze_current_activity() - Activity recognition</text>
        <text x="40" y="125" font-size="10" fill="#666">Cooking, sleeping, working detection</text>
        
        <circle cx="20" cy="145" r="8" fill="#ff9800"/>
        <text x="20" y="150" text-anchor="middle" fill="white" font-size="10" font-weight="bold">9</text>
        <text x="40" y="150" font-size="12" fill="#333">record_scene_feedback() - Learning system</text>
        <text x="40" y="165" font-size="10" fill="#666">Track what works/doesn't</text>
        
        <circle cx="20" cy="185" r="8" fill="#ff9800"/>
        <text x="20" y="190" text-anchor="middle" fill="white" font-size="10" font-weight="bold">10</text>
        <text x="40" y="190" font-size="12" fill="#333">explain_home_state() - Natural explanations</text>
        <text x="40" y="205" font-size="10" fill="#666">"Why is it cold?" analysis</text>
      </g>
    </g>
    
    <!-- Phase 3 -->
    <g transform="translate(900, 40)">
      <rect x="0" y="0" width="480" height="320" rx="10" fill="#e3f2fd" stroke="#2196f3" stroke-width="3"/>
      <rect x="0" y="0" width="480" height="50" rx="10" fill="#2196f3"/>
      <text x="240" y="30" text-anchor="middle" fill="white" font-size="18" font-weight="bold">Phase 3: Advanced Features (Weeks 9-12)</text>
      <text x="240" y="80" text-anchor="middle" font-size="14" font-weight="bold" fill="#333">Multi-Zone AI &amp; Proactive Automation</text>
      
      <!-- Tasks -->
      <g transform="translate(20, 100)">
        <rect x="0" y="0" width="440" height="200" rx="5" fill="#fff" stroke="#ddd"/>
        
        <circle cx="20" cy="25" r="8" fill="#2196f3"/>
        <text x="20" y="30" text-anchor="middle" fill="white" font-size="10" font-weight="bold">11</text>
        <text x="40" y="30" font-size="12" fill="#333">coordinate_zones() - Multi-room intelligence</text>
        <text x="40" y="45" font-size="10" fill="#666">Activity-based whole-home coordination</text>
        
        <circle cx="20" cy="65" r="8" fill="#2196f3"/>
        <text x="20" y="70" text-anchor="middle" fill="white" font-size="10" font-weight="bold">12</text>
        <text x="40" y="70" font-size="12" fill="#333">generate_daily_brief() - AI home assistant</text>
        <text x="40" y="85" font-size="10" fill="#666">Personalized status and suggestions</text>
        
        <circle cx="20" cy="105" r="8" fill="#2196f3"/>
        <text x="20" y="110" text-anchor="middle" fill="white" font-size="10" font-weight="bold">13</text>
        <text x="40" y="110" font-size="12" fill="#333">suggest_automation_improvements() - Self-improving</text>
        <text x="40" y="125" font-size="10" fill="#666">LLM redesigns underperforming rules</text>
        
        <circle cx="20" cy="145" r="8" fill="#2196f3"/>
        <text x="20" y="150" text-anchor="middle" fill="white" font-size="10" font-weight="bold">14</text>
        <text x="40" y="150" font-size="12" fill="#333">prepare_for_event() - Calendar integration</text>
        <text x="40" y="165" font-size="10" fill="#666">Multi-step event preparation</text>
        
        <circle cx="20" cy="185" r="8" fill="#2196f3"/>
        <text x="20" y="190" text-anchor="middle" fill="white" font-size="10" font-weight="bold">15</text>
        <text x="40" y="190" font-size="12" fill="#333">balance_home_comfort() - Whole-home optimization</text>
        <text x="40" y="205" font-size="10" fill="#666">Energy vs comfort tradeoffs</text>
      </g>
    </g>
  </g>
  
  <!-- Technical Implementation Details -->
  <g transform="translate(20, 850)">
    <rect x="0" y="0" width="1360" height="280" rx="10" fill="#f5f5f5" stroke="#ddd" stroke-width="2"/>
    <text x="680" y="30" text-anchor="middle" font-size="18" font-weight="bold" fill="#333">Technical Implementation Details</text>
    
    <!-- LLM Sampling Examples -->
    <g transform="translate(30, 50)">
      <rect x="0" y="0" width="400" height="210" rx="8" fill="#fff" stroke="#9c27b0" stroke-width="2"/>
      <text x="200" y="25" text-anchor="middle" font-size="14" font-weight="bold" fill="#9c27b0">LLM Sampling Request Structure</text>
      
      <text x="10" y="50" font-size="11" font-family="monospace" fill="#333">
        <tspan x="10" dy="0">{</tspan>
        <tspan x="20" dy="15">"messages": [{</tspan>
        <tspan x="30" dy="15">"role": "system",</tspan>
        <tspan x="30" dy="15">"content": "Smart home controller..."</tspan>
        <tspan x="20" dy="15">}, {</tspan>
        <tspan x="30" dy="15">"role": "user",</tspan>
        <tspan x="30" dy="15">"content": {</tspan>
        <tspan x="40" dy="15">"request": "make it cozy",</tspan>
        <tspan x="40" dy="15">"context": {...},</tspan>
        <tspan x="40" dy="15">"constraints": {...}</tspan>
        <tspan x="30" dy="15">}</tspan>
        <tspan x="20" dy="15">}],</tspan>
        <tspan x="20" dy="15">"temperature": 0.7</tspan>
        <tspan x="10" dy="15">}</tspan>
      </text>
    </g>
    
    <!-- Context Structure -->
    <g transform="translate(450, 50)">
      <rect x="0" y="0" width="440" height="210" rx="8" fill="#fff" stroke="#ff9800" stroke-width="2"/>
      <text x="220" y="25" text-anchor="middle" font-size="14" font-weight="bold" fill="#ff9800">Rich Context Data Structure</text>
      
      <text x="10" y="50" font-size="11" font-family="monospace" fill="#333">
        <tspan x="10" dy="0">context = {</tspan>
        <tspan x="20" dy="15">"current_state": get_home_state_snapshot(),</tspan>
        <tspan x="20" dy="15">"patterns": get_behavior_patterns("7d"),</tspan>
        <tspan x="20" dy="15">"predictions": {</tspan>
        <tspan x="30" dy="15">"occupancy": predict_occupancy(),</tspan>
        <tspan x="30" dy="15">"energy": get_energy_forecast(24)</tspan>
        <tspan x="20" dy="15">},</tspan>
        <tspan x="20" dy="15">"constraints": {</tspan>
        <tspan x="30" dy="15">"energy_budget": daily_limit,</tspan>
        <tspan x="30" dy="15">"comfort_preferences": user_prefs</tspan>
        <tspan x="20" dy="15">},</tspan>
        <tspan x="20" dy="15">"safety": validate_scene_safety()</tspan>
        <tspan x="10" dy="15">}</tspan>
      </text>
    </g>
    
    <!-- Response Processing -->
    <g transform="translate(910, 50)">
      <rect x="0" y="0" width="440" height="210" rx="8" fill="#fff" stroke="#4caf50" stroke-width="2"/>
      <text x="220" y="25" text-anchor="middle" font-size="14" font-weight="bold" fill="#4caf50">LLM Response Processing</text>
      
      <text x="10" y="50" font-size="11" font-family="monospace" fill="#333">
        <tspan x="10" dy="0">async def process_llm_response(response):</tspan>
        <tspan x="20" dy="15"># Validate safety</tspan>
        <tspan x="20" dy="15">if not validate_scene_safety(response):</tspan>
        <tspan x="30" dy="15">return reject_unsafe_commands()</tspan>
        <tspan x="20" dy="15"></tspan>
        <tspan x="20" dy="15"># Execute with rollback</tspan>
        <tspan x="20" dy="15">result = await execute_llm_scene(</tspan>
        <tspan x="30" dy="15">commands=response["commands"],</tspan>
        <tspan x="30" dy="15">with_rollback=True</tspan>
        <tspan x="20" dy="15">)</tspan>
        <tspan x="20" dy="15"></tspan>
        <tspan x="20" dy="15"># Record feedback</tspan>
        <tspan x="20" dy="15">record_scene_feedback(result)</tspan>
      </text>
    </g>
  </g>
  
  <!-- Key Benefits -->
  <g transform="translate(20, 1150)">
    <rect x="0" y="0" width="1360" height="180" rx="10" fill="#e8f5e9" stroke="#4caf50" stroke-width="2"/>
    <text x="680" y="30" text-anchor="middle" font-size="18" font-weight="bold" fill="#333">Key Benefits of This Architecture</text>
    
    <g transform="translate(50, 50)">
      <!-- Benefit 1 -->
      <circle cx="15" cy="15" r="10" fill="#4caf50"/>
      <text x="15" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">✓</text>
      <text x="35" y="20" font-size="14" fill="#333" font-weight="bold">Context-Aware Intelligence</text>
      <text x="35" y="40" font-size="12" fill="#666">LLM has full home state, patterns, and predictions for smart decisions</text>
      
      <!-- Benefit 2 -->
      <g transform="translate(0, 60)">
        <circle cx="15" cy="15" r="10" fill="#4caf50"/>
        <text x="15" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">✓</text>
        <text x="35" y="20" font-size="14" fill="#333" font-weight="bold">User Control &amp; Safety</text>
        <text x="35" y="40" font-size="12" fill="#666">Inspector shows all LLM requests, safety validation prevents issues</text>
      </g>
      
      <!-- Benefit 3 -->
      <g transform="translate(450, 0)">
        <circle cx="15" cy="15" r="10" fill="#4caf50"/>
        <text x="15" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">✓</text>
        <text x="35" y="20" font-size="14" fill="#333" font-weight="bold">Self-Improving System</text>
        <text x="35" y="40" font-size="12" fill="#666">Learns from feedback, adapts to preferences, optimizes over time</text>
      </g>
      
      <!-- Benefit 4 -->
      <g transform="translate(450, 60)">
        <circle cx="15" cy="15" r="10" fill="#4caf50"/>
        <text x="15" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">✓</text>
        <text x="35" y="20" font-size="14" fill="#333" font-weight="bold">Natural Interaction</text>
        <text x="35" y="40" font-size="12" fill="#666">Speak naturally, get explanations, understand your home</text>
      </g>
      
      <!-- Benefit 5 -->
      <g transform="translate(850, 0)">
        <circle cx="15" cy="15" r="10" fill="#4caf50"/>
        <text x="15" y="20" text-anchor="middle" fill="white" font-size="12" font-weight="bold">✓</text>
        <text x="35" y="20" font-size="14" fill="#333" font-weight="bold">Proactive Automation</text>
        <text x="35" y="40" font-size="12" fill="#666">Anticipates needs, suggests improvements, prepares for events</text>
      </g>
    </g>
  </g>
  
  <!-- Development Timeline -->
  <g transform="translate(20, 1350)">
    <rect x="0" y="0" width="1360" height="220" rx="10" fill="#fff" stroke="#333" stroke-width="2"/>
    <text x="680" y="30" text-anchor="middle" font-size="18" font-weight="bold" fill="#333">Development Timeline</text>
    
    <!-- Timeline bar -->
    <rect x="100" y="60" width="1160" height="40" rx="20" fill="#f0f0f0" stroke="#ddd"/>
    
    <!-- Phase bars -->
    <rect x="100" y="60" width="290" height="40" rx="20" fill="#4caf50"/>
    <text x="245" y="85" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Phase 1: Weeks 1-4</text>
    
    <rect x="390" y="60" width="290" height="40" rx="20" fill="#ff9800"/>
    <text x="535" y="85" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Phase 2: Weeks 5-8</text>
    
    <rect x="680" y="60" width="290" height="40" rx="20" fill="#2196f3"/>
    <text x="825" y="85" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Phase 3: Weeks 9-12</text>
    
    <rect x="970" y="60" width="290" height="40" rx="20" fill="#9c27b0"/>
    <text x="1115" y="85" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Ongoing: Optimization</text>
    
    <!-- Milestones -->
    <g transform="translate(100, 120)">
      <circle cx="0" cy="0" r="5" fill="#4caf50"/>
      <text x="0" y="20" text-anchor="middle" font-size="11" fill="#333">Basic LLM</text>
      <text x="0" y="35" text-anchor="middle" font-size="11" fill="#333">Integration</text>
    </g>
    
    <g transform="translate(390, 120)">
      <circle cx="0" cy="0" r="5" fill="#ff9800"/>
      <text x="0" y="20" text-anchor="middle" font-size="11" fill="#333">Pattern</text>
      <text x="0" y="35" text-anchor="middle" font-size="11" fill="#333">Recognition</text>
    </g>
    
    <g transform="translate(680, 120)">
      <circle cx="0" cy="0" r="5" fill="#2196f3"/>
      <text x="0" y="20" text-anchor="middle" font-size="11" fill="#333">Multi-Zone</text>
      <text x="0" y="35" text-anchor="middle" font-size="11" fill="#333">Intelligence</text>
    </g>
    
    <g transform="translate(970, 120)">
      <circle cx="0" cy="0" r="5" fill="#9c27b0"/>
      <text x="0" y="20" text-anchor="middle" font-size="11" fill="#333">Self-Learning</text>
      <text x="0" y="35" text-anchor="middle" font-size="11" fill="#333">Automation</text>
    </g>
    
    <g transform="translate(1260, 120)">
      <circle cx="0" cy="0" r="5" fill="#e91e63"/>
      <text x="0" y="20" text-anchor="middle" font-size="11" fill="#333">Full AI</text>
      <text x="0" y="35" text-anchor="middle" font-size="11" fill="#333">Home</text>
    </g>
  </g>
</svg>