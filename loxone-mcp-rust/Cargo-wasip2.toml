# WASIP2-specific Cargo configuration optimized for wasm32-wasip2 target
# This configuration is specifically optimized for WASM Component Model v2

[package]
name = "loxone-mcp-wasip2"
version = "0.1.0"
edition = "2021"
authors = ["Ralf Anton Beier"]
license = "MIT"
description = "Loxone MCP Server for WASM Component Model (WASIP2)"
repository = "https://github.com/avrabe/mcp-loxone"
keywords = ["loxone", "mcp", "home-automation", "wasm", "wasip2"]
categories = ["api-bindings", "web-programming", "wasm"]

[lib]
crate-type = ["cdylib"]
name = "loxone_mcp_wasip2"

[dependencies]
# Core async runtime optimized for WASM
tokio = { version = "1.0", features = ["rt", "sync", "time"], default-features = false }

# Serialization with minimal features
serde = { version = "1.0", features = ["derive"], default-features = false }
serde_json = { version = "1.0", default-features = false }

# Error handling
anyhow = { version = "1.0", default-features = false }
thiserror = { version = "1.0", default-features = false }

# URL parsing for WASM
url = { version = "2.4", features = ["serde"], default-features = false }

# Base64 encoding (minimal)
base64 = { version = "0.21", default-features = false }

# Futures utilities (minimal)
futures = { version = "0.3", default-features = false, features = ["async-await"] }

# Time handling for WASM
chrono = { version = "0.4", features = ["serde", "wasm-bindgen"], default-features = false }

# WASIP2-specific dependencies
wit-bindgen = { version = "0.16", default-features = false }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"], default-features = false }

# WASI interfaces for WASIP2
[dependencies.wasi]
version = "0.12"
features = [
  "keyvalue",
  "http",
  "config", 
  "logging",
  "clocks",
]
default-features = false

# Web APIs (minimal set for compatibility)
web-sys = { version = "0.3", features = [
  "console",
  "Window",
  "Storage",
  "Headers",
  "Request",
  "RequestInit",
  "Response",
], default-features = false }

js-sys = { version = "0.3", default-features = false }

# Minimal allocator for WASM
wee_alloc = { version = "0.4", default-features = false }

# Console error hook for debugging
console_error_panic_hook = { version = "0.1", default-features = false }

# Logging for WASM (optional)
tracing = { version = "0.1", default-features = false, optional = true }
tracing-wasm = { version = "0.2", default-features = false, optional = true }

[features]
default = ["wasi-keyvalue", "wasi-http", "minimal-logging"]

# Core WASIP2 features
wasi-keyvalue = []
wasi-http = []
wasi-config = []

# Optional features
minimal-logging = ["tracing", "tracing-wasm"]
infisical = []
crypto = []

# Debug features (only for development)
debug-logging = ["minimal-logging"]
dev-tools = ["debug-logging"]

[profile.release]
# Aggressive optimization for smallest WASM binary
opt-level = "z"           # Optimize for size
lto = true               # Link-time optimization
codegen-units = 1        # Single codegen unit for better optimization
panic = "abort"          # No unwinding to reduce size
strip = "symbols"        # Strip all symbols

# Optimize all dependencies aggressively
[profile.release.package."*"]
opt-level = "z"
debug = false

[profile.dev]
# Fast compilation for development
opt-level = 0
debug = 2
panic = "abort"

[dev-dependencies]
wasm-bindgen-test = { version = "0.3", default-features = false }

# Component model metadata
[package.metadata.component]
package = "loxone:mcp-wasip2"
target = { path = "wit/wasip2.wit" }

[package.metadata.component.dependencies]
"wasi:keyvalue@0.2.0-draft" = { path = "wit/deps/keyvalue" }
"wasi:http@0.2.0" = { path = "wit/deps/http" }
"wasi:config@0.2.0-draft" = { path = "wit/deps/config" }
"wasi:logging@0.1.0-draft" = { path = "wit/deps/logging" }
"wasi:clocks@0.2.0" = { path = "wit/deps/clocks" }

# Custom build configuration for WASIP2
[package.metadata.wasip2]
# Target settings
target = "wasm32-wasip2"
adapter = "wasi_snapshot_preview1.command.wasm"

# Memory settings (optimized for WASIP2)
initial-memory = "1MiB"
max-memory = "64MiB"
stack-size = "64KiB"

# Component features
enable-component-model = true
enable-resource-limiting = true
enable-wasi-sockets = false  # Not needed for our use case

# Build optimization
[package.metadata.wasip2.optimization]
size-optimization = true
aggressive-dead-code-elimination = true
function-merging = true
import-elimination = true

# WASM-specific build targets
[[bin]]
name = "loxone-mcp-wasip2"
path = "src/bin/wasip2_main.rs"
required-features = ["wasi-keyvalue", "wasi-http"]

# Component generation utility
[[bin]]
name = "generate-wasip2-component"
path = "src/bin/generate_wasip2_component.rs"
required-features = ["dev-tools"]

# Development and testing utilities
[[example]]
name = "wasip2-test-server"
path = "examples/wasip2_test_server.rs"
required-features = ["debug-logging"]

[[example]]
name = "wasip2-component-test"
path = "examples/wasip2_component_test.rs"
required-features = ["dev-tools"]

# Documentation settings
[package.metadata.docs.rs]
targets = ["wasm32-wasip2"]
features = ["wasi-keyvalue", "wasi-http", "minimal-logging"]

# Workspace settings for WASIP2 target
[workspace]
resolver = "2"

# Additional metadata for component publishing
[package.metadata.component.publish]
registry = "component-registry.wasmtime.dev"
repository = "loxone/mcp-wasip2"