name: WASM Tests

# TEMPORARILY DISABLED - Re-enable once WASM support is properly implemented
# TODO: Implement proper feature flags for WASM compatibility
on:
  workflow_dispatch:  # Only run manually for now
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  wasm-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-wasip2
        components: clippy, rustfmt
    
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-wasm-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check MCP protocol WASM compilation (wasip2)
      run: |
        cd mcp-framework/mcp-protocol
        cargo check --target wasm32-wasip2 --no-default-features
    
    - name: Build MCP protocol for wasip2 target
      run: |
        cd mcp-framework/mcp-protocol
        cargo build --target wasm32-wasip2 --no-default-features
        echo "✅ MCP protocol builds successfully for WASM wasip2"

  wasm-size-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-wasip2
    
    - name: Build MCP protocol for size check
      run: |
        cd mcp-framework/mcp-protocol
        cargo build --target wasm32-wasip2 --release --no-default-features
        echo "✅ MCP protocol builds successfully for WASM wasip2 release"
    
    - name: Check MCP protocol WASM binary size
      run: |
        echo "MCP protocol WASM binary size:"
        find mcp-framework/mcp-protocol/target/wasm32-wasip2/release -name "*.wasm" -exec ls -lh {} \;
        echo "✅ WASM size check completed"