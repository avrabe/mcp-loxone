version: '3.8'

services:
  # Development server with HTTP/SSE transport
  loxone-mcp-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: loxone-mcp-dev
    command: ["http", "--port", "3001"]
    ports:
      - "3001:3001"
    environment:
      # Logging
      - RUST_LOG=debug,loxone_mcp_rust=debug
      - LOXONE_LOG_FILE=/var/log/loxone-mcp/server.log
      
      # Credentials (override with your values)
      - LOXONE_USER=${LOXONE_USER:-admin}
      - LOXONE_PASS=${LOXONE_PASS:-password}
      - LOXONE_HOST=${LOXONE_HOST:-192.168.1.100}
      - LOXONE_API_KEY=${LOXONE_API_KEY:-your-api-key}
      
      # Optional: Infisical configuration
      - INFISICAL_PROJECT_ID=${INFISICAL_PROJECT_ID:-}
      - INFISICAL_CLIENT_ID=${INFISICAL_CLIENT_ID:-}
      - INFISICAL_CLIENT_SECRET=${INFISICAL_CLIENT_SECRET:-}
      - INFISICAL_ENVIRONMENT=${INFISICAL_ENVIRONMENT:-dev}
    volumes:
      - ./logs:/var/log/loxone-mcp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Production server with stdio transport (for Claude Desktop)
  loxone-mcp-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: loxone-mcp-prod
    command: ["stdio"]
    environment:
      # Logging
      - RUST_LOG=info,loxone_mcp_rust=info
      - LOXONE_LOG_FILE=/var/log/loxone-mcp/server.log
      
      # Credentials (use Infisical in production)
      - INFISICAL_PROJECT_ID=${INFISICAL_PROJECT_ID}
      - INFISICAL_CLIENT_ID=${INFISICAL_CLIENT_ID}
      - INFISICAL_CLIENT_SECRET=${INFISICAL_CLIENT_SECRET}
      - INFISICAL_ENVIRONMENT=${INFISICAL_ENVIRONMENT:-prod}
    volumes:
      - ./logs:/var/log/loxone-mcp
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Mock server for testing
  loxone-mock:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: loxone-mock
    command: ["/app/target/release/loxone-mcp-mock-server"]
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=debug
    restart: unless-stopped

# Optional: Add a reverse proxy for production use
  nginx:
    image: nginx:alpine
    container_name: loxone-mcp-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - loxone-mcp-dev
    restart: unless-stopped
    profiles:
      - production

volumes:
  logs:
    driver: local